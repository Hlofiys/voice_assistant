openapi: 3.0.0
info:
  title: Voice Assistant API
  version: 1.0.0
  description: API for voice assistant backend

servers:
  - url: https://assistant.hlofiys.xyz
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Token:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT token
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          type: string
          description: JWT token
        refresh_token:
          type: string
          description: Refresh token
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    RegisterResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Registration successful. Please check your email to verify your account.
    ConfirmEmailRequest:
      type: object
      required:
        - email
        - code
      properties:
        email:
          type: string
        code:
          type: string
    ConfirmEmailResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          type: string
          description: JWT token
        refresh_token:
          type: string
          description: Refresh token
    RefreshRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
    RefreshResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          type: string
          description: JWT token
        refresh_token:
          type: string
          description: Refresh token
    PasswordResetCodeRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
    PasswordResetCodeResponse:
      type: object
      required:
        - email
        - message
      properties:
        email:
          type: string
        message:
          type: string
    PasswordResetWithCodeRequest:
      type: object
      required:
        - email
        - code
        - new_password
      properties:
        email:
          type: string
        code:
          type: string
        new_password:
          type: string
    PasswordResetWithCodeResponse:
      type: object
      required:
        - token
        - refresh_token
      properties:
        token:
          type: string
          description: JWT token
        refresh_token:
          type: string
          description: Refresh token

    NearestRequest:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float

    NearestResponse:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Nearest location or information as text

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      operationId: register
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Registration successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Invalid request or user already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: User with this email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/login:
    post:
      summary: Login to get a JWT token
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/confirm-email:
    post:
      summary: Confirm user email address
      operationId: confirmEmail
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmEmailRequest"
      responses:
        "200":
          description: Email confirmed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmEmailResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User for the provided email/code not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/logout:
    post:
      summary: Log out current user
      operationId: logout
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully logged out
        "401":
          description: Unauthorized. Invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/validate-token:
    get:
      tags:
        - Authentication
      summary: Validate current authentication token
      operationId: validateToken
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Token is valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token is valid."
        "401":
          description: Unauthorized. Invalid, expired, or missing authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access and refresh tokens
      operationId: refreshTokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "200" :
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/RefreshResponse"
        "400" :
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401" :
          description: Unauthorized. The refresh token is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/password/request-reset-code:
    post:
      summary: Request a password reset code
      operationId: requestPasswordResetCode
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetCodeRequest"
      responses:
        "200":
          description: Password reset request successfully processed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetCodeResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User with this email not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/auth/password/reset-with-code:
    post:
      summary: Reset password using a verification code
      operationId: resetPasswordWithCode
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetWithCodeRequest"
      responses:
        "200":
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetWithCodeResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User with this email not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/chat:
    post:
      summary: Chat with voice assistant (send audio, get text)
      operationId: chat
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  format: binary
                session_id:
                  type: string
                  description: Unique session identifier for the conversation
      responses:
        "200":
          description: Response from voice assistant
          content:
            application/json:
              schema:
                type: object
                properties:
                  transcription:
                    type: string
                    description: Transcription of the audio input
                  assistant_response:
                    type: string
                    description: Response from the voice assistant
                  session_id:
                    type: string
                    description: Unique session identifier for the conversation

        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/nearest:
    post:
      summary: Get nearest location or information
      operationId: nearest
      tags:
        - Location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NearestRequest"
      responses:
        "200":
          description: Nearest location or information as text
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NearestResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
