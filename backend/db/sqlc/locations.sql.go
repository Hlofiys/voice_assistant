// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: locations.sql

package db

import (
	"context"
)

const getNearestPharmacy = `-- name: GetNearestPharmacy :one
SELECT id, text, ST_AsText(location) AS location_wkt
		FROM locations
		ORDER BY location <-> ST_SetSRID(ST_MakePoint($1, $2), 4326)
		LIMIT 1
`

type GetNearestPharmacyParams struct {
	StMakepoint   interface{} `json:"st_makepoint"`
	StMakepoint_2 interface{} `json:"st_makepoint_2"`
}

type GetNearestPharmacyRow struct {
	ID          int32       `json:"id"`
	Text        string      `json:"text"`
	LocationWkt interface{} `json:"location_wkt"`
}

func (q *Queries) GetNearestPharmacy(ctx context.Context, arg GetNearestPharmacyParams) (GetNearestPharmacyRow, error) {
	row := q.db.QueryRow(ctx, getNearestPharmacy, arg.StMakepoint, arg.StMakepoint_2)
	var i GetNearestPharmacyRow
	err := row.Scan(&i.ID, &i.Text, &i.LocationWkt)
	return i, err
}
